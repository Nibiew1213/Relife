import { useContext, useLayoutEffect, useState } from 'react'
import { View, StyleSheet } from 'react-native'

import GoalForm from '../components/ManageGoal/GoalForm'
import ErrorOverlay from '../components/UI/ErrorOverLay'
import IconButton from '../components/UI/IconButton'
import LoadingOverlay from '../components/UI/LoadingOverlay'
import { GlobalStyles } from '../constants/styles'
import { GoalsContext } from '../store/goals-context'
import { storeGoal } from '../util/http'

function NewGoal({ navigation }) {
    const [isSubmitting, setIsSubmitting] = useState(false)
    const [error, setError] = useState() // undefined state as theres no error initially

    const goalsCtx = useContext(GoalsContext)

    useLayoutEffect(() => { // useEffect to prevent flickering of old to new content
        navigation.setOptions({ // method to set values like title of screen
            title: 'Add Goal' 
        })
    }, [navigation]) // dependecies of navigation prop


    function cancelHandler() {
        navigation.goBack()
    }

    async function confirmHandler(goalData) {
        setIsSubmitting(true)
        try {
            const id = await storeGoal(goalData) // will get back id from storeGoal function from http.js
            goalsCtx.addGoal({ ...goalData, id: id }) // passing id field generated by firebase into goalData object
            navigation.goBack()
            setIsSubmitting(false) // prevents LoadingOverlay spinner when theres an error
        } catch (error) {
            setError('Could not save data - please try again later!')
            setIsSubmitting(false)
        }
    }

    if (error && !isSubmitting) {
        return <ErrorOverlay message={error} />
    }

    if (isSubmitting) {
        return <LoadingOverlay />
    }

    return (
        <View style={styles.container}>
            <GoalForm
                submitButtonLabel={'Add'}
                onSubmit={confirmHandler} 
                onCancel={cancelHandler}
            />          
        </View>
    )
}

export default NewGoal

const styles = StyleSheet.create({
    container:{
        flex: 1,
        padding: 24,
        backgroundColor: GlobalStyles.colors.primary800    
    },

})